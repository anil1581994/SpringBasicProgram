package com.bridgelabz.dao;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;
import javax.sql.DataSource;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.RowMapper;
import org.springframework.stereotype.Repository;
import com.bridgelabz.model.Login;
import com.bridgelabz.model.User;

@Repository("userDao")
public class UserDaoImpl implements UserDao {
	@Autowired
	DataSource dataSource;
	@Autowired
	JdbcTemplate jdbcTemplate;

	
	
	public void register(User user) {
		String query = "insert into User values (?,?,?,?,?,?,?)";
		int update = jdbcTemplate.update(query,
				new Object[] {  user.getUsername(),user.getPassword(), user.getFirstname(), user.getLastname(),user.getEmail(),user.getAddress(),
						user.getPhone()});
	    System.out.println(update);
	}

	@SuppressWarnings("unchecked")
	public User ValidatUser(Login login) // login_persisstence
	{
		String sql = "select * from User where username= ? and password= ?";
	    List<User> users = jdbcTemplate.query(sql, new Object[] { login.getUsername(), login.getPassword() }, new UserMapper());
        System.out.println(users.get(0).getLastname());
	    if(users.isEmpty()) {
	    	return null;
	    }
	    User user = users.get(0);
	    System.out.println(user.getUsername());
		return user;
	}
	
}

class UserMapper implements RowMapper {

	public User mapRow(ResultSet rs, int rowNum) throws SQLException {
		User user = new User();
		user.setFirstname(rs.getString("firstname"));
		user.setLastname(rs.getString("lastname"));

		return user;
	}

}